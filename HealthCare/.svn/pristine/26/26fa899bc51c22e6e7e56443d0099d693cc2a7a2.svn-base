package app.nichepro.fragmenttabdoctor.home;

import java.util.ArrayList;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.fragmenttabpatient.ehr.PatientEHRFragment;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.PatientAppointmentListResponseObject;
import app.nichepro.model.PatientAppointmentResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.UpdateUiFromAdapterListener;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class DoctorHomeFragment extends BaseFragment implements
		ResponseParserListener, UpdateUiFromAdapterListener {

	PatientAppointmentListResponseObject mDocAppointmentData = null;
	private WebRequestTask appointmentRequestTask;
	private ResponseMesssagType msgType;
	private ArrayAdapter<PatientAppointmentResponseObject> mListAdapter;
	private ListView mListView;
	private LayoutInflater mInflater;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		View view = inflater.inflate(R.layout.doctor_home_tab_first_screen,
				container, false);
		mInflater = inflater;

		mListView = (ListView) view.findViewById(R.id.appointmentlist);
		if (mDocAppointmentData == null) {
			requestForAppointments();
		}

		return view;
	}

	void populateViewWithData() {
		// Creating the list adapter and populating the list
		mListAdapter = new DoctorAppointmentAdapter(mInflater.getContext(),
				mInflater, R.layout.doctor_home_list_cell, this);

		for (PatientAppointmentResponseObject element : mDocAppointmentData.APPOINTMENT_LIST) {
			mListAdapter.add(element);

		}
		mListView.setAdapter(mListAdapter);
	}

	public void requestForAppointments() {
		appointmentRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.APPOINTMENT_LIST), getActivity(),
				this);

		HealthCareApp myApp = (HealthCareApp) getActivity().getApplication();
		appointmentRequestTask.AddParam(Constants.PARAM_doctorId, myApp
				.getLoggedInUser().getPartyId());

		appointmentRequestTask.AddParam(Constants.PARAM_visitTypeId,
				Constants.VALUE_DOCTOR);
		appointmentRequestTask.execute();
	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.AppointmentDoctorListMessageType) {

			if (items != null && !items.isEmpty() && items.size() > 0) {
				this.mDocAppointmentData = (PatientAppointmentListResponseObject) items
						.get(0);
				if (this.mDocAppointmentData.APPOINTMENT_LIST.size() > 0) {
					populateViewWithData();

				} else {
					UIUtilities.showConfirmationAlert(getActivity(),
							R.string.dialog_title_information,
							"No Appointments Found", R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {

								}
							});
				}
			}
		} else {
			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information, "No Appointments Found",
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		}

	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		UIUtilities.showConfirmationAlert(getActivity(),
				R.string.dialog_title_information, ex.getMessage(),
				R.string.dialog_button_Ok,
				new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {

					}
				});
	}

	@Override
	public void updateUI(String message) {
		// TODO Auto-generated method stub

	}

	@Override
	public void updateUI(int position) {
		// TODO Auto-generated method stub
		PatientAppointmentResponseObject element = mDocAppointmentData.APPOINTMENT_LIST
				.get(position);

		PatientEHRFragment pef = new PatientEHRFragment();
		pef.isFromDoctor = true;
		pef.tabName = Constants.TAB_HOME;
		pef.patientId = element.patientId;
		mDoctorActivity.pushFragments(Constants.TAB_HOME, pef, true, true);
	}

}
