package app.nichepro.fragmenttabpatient.ehr;

import java.util.ArrayList;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.fragmenttabpatient.info.PatientInfoListAdapter;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.PatientMedicationListResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;
import app.nichepro.util.EnumFactory.ResponseMesssagType;


public class PatientEHRFragment extends BaseFragment implements ResponseParserListener{
	
	ArrayList<String> mEhrData;
	WebRequestTask ehrRequestTask;
	private ResponseMesssagType msgType;
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		mEhrData = new ArrayList<String>();
		mEhrData.add("Aponintments");
		mEhrData.add("Medication");
		mEhrData.add("Alergies");
		mEhrData.add("Diagnosis History");
		mEhrData.add("Vital Statistics");
		mEhrData.add("Share Health Records");	
		View view = inflater.inflate(R.layout.info_first_screen, container,
				false);

		ListView list = (ListView) view.findViewById(R.id.lvInfoItems);
		ArrayAdapter<String> listAdapter = new PatientInfoListAdapter(inflater.getContext(),inflater, R.layout.patient_list_cell);
		for (String element : mEhrData) {
			listAdapter.add(element);
		}
        list.setAdapter(listAdapter);


        // Creating an item click listener, to open/close our toolbar for each item
        list.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            public void onItemClick(AdapterView<?> parent, final View view, int position, long id) {
            	if(position == 0){
            		mActivity.pushFragments(Constants.TAB_EHR, new PatientEhrAppointmentsFragment() , true, true);
            	}if(position == 1){
            		requestForMedication();
            		//mActivity.pushFragments(Constants.TAB_EHR, new PatientEhrMedicationFragment() , true, true);
            	}if(position == 2){
            		requestForAllergies();
            		//mActivity.pushFragments(Constants.TAB_EHR, new PatientEhrAllergiesFragment() , true, true);
            	}if(position == 5){
            		//mActivity.pushFragments(Constants.TAB_EHR, new PatientEhrShareHealthRecordFragment() , true, true);
            		requestForDoctor();
            	}

            }

		
        });
		return view;
	}

	public void requestForDoctor(){
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.ACTOR_LIST), getActivity(), this);

		ehrRequestTask.AddParam(Constants.PARAM_partyType, "Doctor");
		ehrRequestTask.AddParam(Constants.PARAM_roleTypeId, "HC_PROVIDER");
		ehrRequestTask.execute();
	}

	public void requestForMedication(){
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.AILMENTS_LIST), getActivity(), this);

		HealthCareApp myApp = (HealthCareApp)getActivity().getApplication();
		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp.getLoggedInUser().getPartyId());
//		ehrRequestTask.AddParam(Constants.PARAM_visitEpisodeType, "100001");
//		ehrRequestTask.AddParam(Constants.PARAM_medicationId, "PCt");
		ehrRequestTask.AddParam(Constants.PARAM_ailmentType, "Medication");
		ehrRequestTask.execute();
	}
	
	private void requestForAllergies() {
	
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.AILMENTS_LIST), getActivity(), this);

		HealthCareApp myApp = (HealthCareApp)getActivity().getApplication();
		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp.getLoggedInUser().getPartyId());
//		ehrRequestTask.AddParam(Constants.PARAM_visitEpisodeType, "100001");
		ehrRequestTask.AddParam(Constants.PARAM_ailmentType, "Allergies");
		ehrRequestTask.execute();
		
	}
	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.MedicationListMessageType) {
			PatientEhrMedicationFragment pemf = new PatientEhrMedicationFragment();
			if (items != null && !items.isEmpty() && items.size() > 0) {
//				BaseResponseObject bro =  items.get(0);
//				if (bro.getClass().getName().toString().compareTo(PatientMedicationListResponseObject.) ) {
//					
//				}
				pemf.medicationListObject = (PatientMedicationListResponseObject) items.get(0);
	    		mActivity.pushFragments(Constants.TAB_EHR, pemf , true, true);
				
			}
		}else if(this.msgType == ResponseMesssagType.AlergiesListMessageType){
			PatientEhrAllergiesFragment peaf = new PatientEhrAllergiesFragment();
			if (items != null && !items.isEmpty() && items.size() > 0) {
				peaf.allergiesListObject = (PatientMedicationListResponseObject) items.get(0);
	    		mActivity.pushFragments(Constants.TAB_EHR, peaf , true, true);
				
			}
		}
	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		
	}

	public ResponseMesssagType getMsgType() {
		return msgType;
	}

	public void setMsgType(ResponseMesssagType msgType) {
		this.msgType = msgType;
	}
}
