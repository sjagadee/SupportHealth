package app.nichepro.fragmenttabpatient.ehr;

import java.util.ArrayList;

import android.app.Activity;
import android.content.Context;
import android.content.DialogInterface;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.TextView;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.R;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.PartyResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.Constants;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class DoctorListAdapter extends ArrayAdapter<PartyResponseObject> implements ResponseParserListener {
	Button shareEHR;
	Button sendMSG;
	LayoutInflater minflater;
	Context mContext;
	Activity mActivity;

	WebRequestTask shareEhrRequestTask;
	private ResponseMesssagType msgType;
	
	static class ViewHolder {

		/** The note view. */
		TextView lastNameText;

		/** The date name. */
		TextView firstNameText;

		/** The date name. */
		TextView phoneText;

		TextView specializationText;

		Button shareBtn;
		Button msgBtn;
		
		

		/**
		 * Reset the content of cell to remove the flickering effect
		 */
		public void reset() {

		}
	}

	public DoctorListAdapter(Context context, LayoutInflater inflater,
			int textViewResourceId, Activity activity) {
		super(context, textViewResourceId);
		mActivity = activity;
		minflater = inflater;
		mContext = context;
	}

	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		ViewHolder holder;

		if (convertView == null) {

			convertView = minflater.inflate(R.layout.doctor_list_view, null);
			holder = new ViewHolder();
			holder.lastNameText = ((TextView) convertView
					.findViewById(R.id.tvDoctorLastName));
			holder.firstNameText = ((TextView) convertView
					.findViewById(R.id.tvDoctorFirstName));
			holder.phoneText = ((TextView) convertView
					.findViewById(R.id.tvPhoneNumber));
			holder.specializationText = ((TextView) convertView
					.findViewById(R.id.tvSpecialization));
			holder.shareBtn = (Button) convertView.findViewById(R.id.sharebtn);
			holder.msgBtn = (Button) convertView.findViewById(R.id.msgbtn);
			convertView.setTag(holder);
		} else {
			holder = (ViewHolder) convertView.getTag();
		}

		PartyResponseObject pro = getItem(position);

		holder.lastNameText.setText(pro.lastName);
		holder.firstNameText.setText(pro.firstName);
		holder.phoneText.setText(pro.mobileNo);
		if (pro.mobileNo != null && pro.mobileNo.isEmpty()) {
			holder.phoneText.setVisibility(View.GONE);
		}
		holder.specializationText.setText(pro.specialization);
		if (pro.specialization != null && pro.specialization.isEmpty()) {
			holder.specializationText.setVisibility(View.GONE);
		}

		holder.shareBtn.setTag(pro.partyId);
		holder.shareBtn.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				String partyId = (String) v.getTag();
				requestForShareEHR(partyId);
			}
		});

		holder.msgBtn.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
				
			}
		});

		return convertView;
	}
	
	public void requestForShareEHR(String partyIdTo){
		shareEhrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.SHARE_EHR), mContext, this);

		 HealthCareApp myApp = (HealthCareApp) mActivity.getApplication();
		 shareEhrRequestTask.AddParam(Constants.PARAM_partyId, myApp
			 .getLoggedInUser().getPartyId());
		
		shareEhrRequestTask.AddParam(Constants.PARAM_partyIdTo, partyIdTo);
		
		shareEhrRequestTask.execute();
	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.CommunicationEventCreatedMessageType) {
			UIUtilities.showConfirmationAlert(mActivity,
					R.string.dialog_title_information,
					"Your message has sent successfully",
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		}else{
			UIUtilities.showConfirmationAlert(mActivity,
					R.string.dialog_title_information, R.string.server_error,
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		}
	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		UIUtilities.showConfirmationAlert(mActivity,
				R.string.dialog_title_information, ex.getMessage(),
				R.string.dialog_button_Ok,
				new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {

					}
				});
	}

}