package app.nichepro.activities.healthcare;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import app.nichepro.util.EnumFactory.LoginType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.db.DbUtils;

public class LoginActivity extends BaseActivity implements OnClickListener{

	EditText userName, password;
	TextView loginTitle;
	Button login, createAccount, doctorRegistration;
	String tName, tPass;
	ProgressDialog progress;
	String loginType;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login);
		Intent intent = getIntent();
		
		loginType = intent.getStringExtra("loginType");
		loginTitle = (TextView)findViewById(R.id.loginTitle);
		loginTitle.setText(loginType + " Login");
		userName = (EditText) findViewById(R.id.etUserName);
		password = (EditText) findViewById(R.id.etPassword);
		login = (Button) findViewById(R.id.bLogin);
		createAccount = (Button) findViewById(R.id.bRegister);
		
		login.setOnClickListener(this);
		createAccount.setOnClickListener(this);	
		
	}

	@SuppressWarnings("deprecation")
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch(v.getId()){
		case R.id.bLogin:
			tName = userName.getText().toString();
			tPass = password.getText().toString();
			if(tName.trim().equals("") || tPass.trim().equals("")){
				AlertDialog alertDialog = new AlertDialog.Builder(this).create();
				alertDialog.setTitle("Log in");
				alertDialog.setMessage("Enter all details!");
				alertDialog.setButton("OK", new DialogInterface.OnClickListener() {
				   public void onClick(DialogInterface dialog, int which) {
				      // here you can add functions
				   }
				});
				alertDialog.show();
			} else {
			Boolean validate =	DbUtils.validateRegisterUserCredentials(this, tName, tPass);
			 progress = ProgressDialog.show(this,
					 "Loading", "Please wait...");	

			if(validate){
				 Handler handler = new Handler();
				 handler.postDelayed(new Runnable() {
				     public void run() {
				    	 progress.dismiss();
							Intent it = new Intent(LoginActivity.this,PatientTabActivity.class);
				     	    startActivity(it);
				     }}, 3000);  // 3000 milliseconds
			}else{
				 Handler handler = new Handler();
				 handler.postDelayed(new Runnable() {
				     public void run() {
				    	 progress.dismiss();
				    	 showAlert();
				     }}, 3000);
				
				}
			}
			break;
		case R.id.bRegister:
			if(loginType.compareTo(LoginType.Patient.name()) == 0){
				Intent it = new Intent(LoginActivity.this,PatientRegisterationActivity.class);
	     	    startActivity(it);	
			}else if(loginType.compareTo(LoginType.Doctor.name()) == 0){
				Intent it = new Intent(LoginActivity.this,DoctorRegistrationActivity.class);
	     	    startActivity(it);	
			}else{//Sponsor
				
			}

			break;
		}
	}
	public  void showAlert(){
		 UIUtilities.showConfirmationAlert(this,
					R.string.dialog_title_information, R.string.invalid_credentials, R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog,
								int which) {
							
						}
					});
	}
}
