package app.nichepro.fragmenttabpatient.home;

import java.util.ArrayList;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.PatientAllergiesListResponseObject;
import app.nichepro.model.PatientAppointmentListResponseObject;
import app.nichepro.model.PatientDiagnosisListResponseObject;
import app.nichepro.model.PatientMedicationListResponseObject;
import app.nichepro.model.PatientVitalStatListResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class PatientHomeFragment extends BaseFragment implements
		ResponseParserListener {

	WebRequestTask ehrRequestTask;
	private ResponseMesssagType msgType;
	private HealthCareApp myApp;
	private PatientMedicationListResponseObject medicationListObject;
	private PatientDiagnosisListResponseObject diagnosisListObject;;
	private PatientVitalStatListResponseObject vitalstatListObject;
	private PatientAppointmentListResponseObject mAppointmentData;
	private PatientAllergiesListResponseObject allergiesListObject;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.patient_home_screen, container,
				false);
		myApp = (HealthCareApp) getActivity().getApplication();
	//	myApp.getLoggedInUser().LOGIN_DETAILS.lastName
		
		return view;
	}

	public void requestForAllergies() {
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.LIST_OF_ALLERGIES), getActivity(),
				this);

		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp
				.getLoggedInUser().getPartyId());

		ehrRequestTask.execute();
	}

	public void requestForAppointments() {
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.APPOINTMENT_LIST), getActivity(),
				this);

		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp
				.getLoggedInUser().getPartyId());

		ehrRequestTask.AddParam(Constants.PARAM_visitTypeId,
				Constants.VALUE_PATIENT);
		ehrRequestTask.execute();
	}

	public void requestForDiagnosisHistory() {
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.LIST_OF_DIAGNOSIS), getActivity(),
				this);

		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp
				.getLoggedInUser().getPartyId());

		ehrRequestTask.execute();
	}

	public void requestForMedication() {
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.LIST_OF_MEDICATION), getActivity(),
				this);

		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp
				.getLoggedInUser().getPartyId());

		ehrRequestTask.execute();
	}

	public void requestForVitalStatistics() {
		ehrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.LIST_OF_VITALSTAT), getActivity(),
				this);

		ehrRequestTask.AddParam(Constants.PARAM_patientId, myApp
				.getLoggedInUser().getPartyId());

		ehrRequestTask.execute();
	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.MedicationListMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {
				this.medicationListObject = (PatientMedicationListResponseObject) items
						.get(0);

			}
		} else if (this.msgType == ResponseMesssagType.DiagnosisListMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {

				this.diagnosisListObject = (PatientDiagnosisListResponseObject) items
						.get(0);

			}
		} else if (this.msgType == ResponseMesssagType.VitalStatisticsMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {

				this.vitalstatListObject = (PatientVitalStatListResponseObject) items
						.get(0);

			}
		} else if (this.msgType == ResponseMesssagType.PatientAppointmentListMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {

				this.mAppointmentData = (PatientAppointmentListResponseObject) items
						.get(0);

			}
		} else if (this.msgType == ResponseMesssagType.AllergiesListMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {

				this.allergiesListObject = (PatientAllergiesListResponseObject) items
						.get(0);

			}
		}
	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		UIUtilities.showConfirmationAlert(getActivity(),
				R.string.dialog_title_information, ex.getMessage(),
				R.string.dialog_button_Ok,
				new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {

					}
				});
	}

	public ResponseMesssagType getMsgType() {
		return msgType;
	}

	public void setMsgType(ResponseMesssagType msgType) {
		this.msgType = msgType;
	}

}
