package app.nichepro.fragmenttabpatient.community;

import java.util.ArrayList;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.fragmenttabpatient.info.PatientInfoListAdapter;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.PatientUpEventsListResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class PatientCommunityFragment extends BaseFragment implements
		ResponseParserListener {

	ArrayList<String> infoData;
	WebRequestTask communityRequestTask;
	private ResponseMesssagType msgType;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		infoData = new ArrayList<String>();
		infoData.add("Latest On Cancer");
		infoData.add("Request For Sponsor");
		infoData.add("Forum");
		infoData.add("Events");
		infoData.add("Health Partners");

		View view = inflater.inflate(R.layout.community_first_screen,
				container, false);
		ListView list = (ListView) view.findViewById(R.id.lvCommunityItems);
		ArrayAdapter<String> listAdapter = new PatientInfoListAdapter(
				inflater.getContext(), inflater, R.layout.patient_list_cell);
		for (String element : infoData) {
			listAdapter.add(element);
		}
		list.setAdapter(listAdapter);

		// Creating an item click listener, to open/close our toolbar for each
		// item
		list.setOnItemClickListener(new AdapterView.OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, final View view,
					int position, long id) {
				switch (position) {
				case 0:
					mActivity.pushFragments(Constants.TAB_COMMUNITY,
							new PatientCommunityLOCFragment(), true, true);
					break;
				case 1:
					mActivity.pushFragments(Constants.TAB_COMMUNITY,
							new PatientCommunityRequestSponsorFragment(), true,
							true);

					break;
				case 2:
					mActivity.pushFragments(Constants.TAB_COMMUNITY,
							new PatientCommunityForumFragment(), true, true);
					break;
				case 3:

					requestForUpComingEvents();
					requestForPastEvents();
					// mActivity.pushFragments(Constants.TAB_COMMUNITY,
					// new PatientCommunityEventsFragments(), true, true);
					break;
				case 4:
					mActivity.pushFragments(Constants.TAB_COMMUNITY,
							new PatientCommunityHealthPartnersFragment(), true,
							true);
					break;
				}

			}
		});

		return view;
	}

	public void requestForUpComingEvents() {
		communityRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.LIST_OF_UPEVENTS), getActivity(),
				this);
			communityRequestTask.execute();
	}

	public void requestForPastEvents() {
		communityRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.LIST_OF_PASTEVENTS), getActivity(),
				this);

		communityRequestTask.execute();
	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}
	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		
		if (this.msgType == ResponseMesssagType.UpcomingEventsMessageType || this.msgType == ResponseMesssagType.PastEventsMessageType   ) {
			PatientCommunityEventsFragments pcef;
			pcef = new PatientCommunityEventsFragments();
			if (items != null && !items.isEmpty() && items.size() > 0) {

				pcef.upEventsResponseObject = (PatientUpEventsListResponseObject) items.get(0);
				
				pcef.pastEventsResponseObject = (PatientUpEventsListResponseObject) items.get(0);
				
				mActivity.pushFragments(Constants.TAB_COMMUNITY, pcef, true,
						true);
			}
			
//		} else if (this.msgType == ResponseMesssagType.PastEventsMessageType ) {
//			pcef = new PatientCommunityEventsFragments();
//			if (items != null && !items.isEmpty() && items.size() > 0) {
//
//				pcef.pastEventsResponseObject = (PatientUpEventsListResponseObject) items.get(0);
//				
//				mActivity.pushFragments(Constants.TAB_COMMUNITY, pcef, true,
//						true);
//			}
			
		}
	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		UIUtilities.showConfirmationAlert(getActivity(),
				R.string.dialog_title_information, ex.getMessage(),
				R.string.dialog_button_Ok,
				new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {

					}
				});

	}

	public ResponseMesssagType getMsgType() {
		return msgType;
	}

	public void setMsgType(ResponseMesssagType msgType) {
		this.msgType = msgType;
	}
}