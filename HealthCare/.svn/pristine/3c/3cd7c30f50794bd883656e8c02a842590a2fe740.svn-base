package app.nichepro.activities.healthcare;

import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.inputmethod.EditorInfo;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import app.nichepro.HealthCareApp;
import app.nichepro.model.db.DoctorRegistrationInfo;
import app.nichepro.model.db.UserRegistrationInfo;
import app.nichepro.util.EnumFactory.LoginType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.db.DbUtils;

public class LoginActivity extends BaseActivity implements OnClickListener{

	EditText userName, password;
	TextView loginTitle;
	Button login, createAccount, doctorRegistration;
	String tName, tPass;
	ProgressDialog progress;
	String loginType;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login);
		Intent intent = getIntent();
		
		loginType = intent.getStringExtra("loginType");
		loginTitle = (TextView)findViewById(R.id.loginTitle);
		loginTitle.setText(loginType + " Login");
		userName = (EditText) findViewById(R.id.etUserName);
		password = (EditText) findViewById(R.id.etPassword);
		login = (Button) findViewById(R.id.bLogin);
		createAccount = (Button) findViewById(R.id.bRegister);
		
		login.setOnClickListener(this);
		createAccount.setOnClickListener(this);	
		
	}

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
//		SharedPreferences shredPref = getSharedPreferences(
//				"loginInfo", MODE_PRIVATE);
//		String user = shredPref.getString("username", null);
//		String password = shredPref.getString("password", null);


		HealthCareApp mAppInstance = (HealthCareApp)getApplication();
		if(loginType.compareTo(LoginType.Patient.name()) == 0){
			UserRegistrationInfo user = mAppInstance.getPatientLoginInfo();
			if (user != null) {
				userName.setText(user.getUsername());
				password.setText(user.getPassword());
				InitiatLoginRequest();
			}
		}else if(loginType.compareTo(LoginType.Doctor.name()) == 0){
			DoctorRegistrationInfo user = mAppInstance.getDoctorLoginInfo();
			if (user != null) {
				userName.setText(user.getUsername());
				password.setText(user.getPassword());
				InitiatLoginRequest();
			}
		}else{//Sponsor
			
		}
	}
	@SuppressWarnings("deprecation")
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch(v.getId()){
		case R.id.bLogin:
			InitiatLoginRequest();
			break;
		case R.id.bRegister:
			if(loginType.compareTo(LoginType.Patient.name()) == 0){
				Intent it = new Intent(LoginActivity.this,PatientRegisterationActivity.class);
	     	    startActivity(it);	
			}else if(loginType.compareTo(LoginType.Doctor.name()) == 0){
				Intent it = new Intent(LoginActivity.this,DoctorRegistrationActivity.class);
	     	    startActivity(it);	
			}else{//Sponsor
				
			}

			break;
		}
	}
	public  void showAlert(){
		 UIUtilities.showConfirmationAlert(this,
					R.string.dialog_title_information, R.string.invalid_credentials, R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog,
								int which) {
							
						}
					});
	}
	public boolean onEditorAction(TextView exampleView, int actionId, KeyEvent event) {
		   if (actionId == EditorInfo.IME_NULL  
		      && event.getAction() == KeyEvent.ACTION_DOWN) { 
			   InitiatLoginRequest();
		   }
		   return true;
		}
	public void InitiatLoginRequest(){
		tName = userName.getText().toString();
		tPass = password.getText().toString();
		if(tName.trim().equals("") || tPass.trim().equals("")){
				
			UIUtilities.showConfirmationAlert(this,
					R.string.dialog_title_information, R.string.under_construction, R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog,
								int which) {
							
						}
					});
		} else {
		Boolean validate =	DbUtils.validateRegisterUserCredentials(this, tName, tPass,loginType);
		 progress = ProgressDialog.show(this,
				 "Loading", "Please wait...");	

		if(validate){
			 Handler handler = new Handler();
			 handler.postDelayed(new Runnable() {
			     public void run() {
			    	 progress.dismiss();
//			 		SharedPreferences shredPref = getSharedPreferences(
//							"loginInfo", MODE_PRIVATE);
//					SharedPreferences.Editor editor = shredPref.edit();
//					editor.clear();
//					editor.commit();
			 		HealthCareApp mAppInstance = (HealthCareApp)getApplication();
			 		mAppInstance.setPatientLoginInfo(null);
			 		mAppInstance.setDoctorLoginInfo(null);
			    		if(loginType.compareTo(LoginType.Patient.name()) == 0){
							Intent it = new Intent(LoginActivity.this,PatientTabActivity.class);
				     	    startActivity(it);	
						}else if(loginType.compareTo(LoginType.Doctor.name()) == 0){
							Intent it = new Intent(LoginActivity.this,DoctorTabActivity.class);
				     	    startActivity(it);	
						}else{//Sponsor
							
						}
						
			     }}, 3000);  // 3000 milliseconds
		}else{
			 Handler handler = new Handler();
			 handler.postDelayed(new Runnable() {
			     public void run() {
			    	 progress.dismiss();
			    	 showAlert();
			     }}, 3000);
			
			}
		}
	}
}
