package app.nichepro.activities.healthcare;

import java.util.Calendar;

import android.app.Activity;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.Spinner;
import app.nichepro.HealthCareApp;
import app.nichepro.model.db.UserRegistrationInfo;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.db.DbUtils;

public class PatientRegisterationActivity extends Activity implements
		OnClickListener {

	EditText name, dateOfBirth, zipCode, phoneNumber, email, password,
			confirmPassword;
	Spinner city, state;
	Button register;
	String tName, tDob, tCity, tState, tZip, tPhone, tEmail, tPass, tConPass;

	private int year;
	private int month;
	private int day;
	Dialog progress;

	static final int DATE_DIALOG_ID = 999;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.register);
		name = (EditText) findViewById(R.id.etName);
		name.setOnClickListener(this);
		dateOfBirth = (EditText) findViewById(R.id.etDOB);
		zipCode = (EditText) findViewById(R.id.etZipCode);
		phoneNumber = (EditText) findViewById(R.id.etPhoneNum);
		email = (EditText) findViewById(R.id.etEmail);
		password = (EditText) findViewById(R.id.etRegPassword);
		confirmPassword = (EditText) findViewById(R.id.etRegConfirmPass);
		register = (Button) findViewById(R.id.bRegister);
		city = (Spinner) findViewById(R.id.sCity);
		state = (Spinner) findViewById(R.id.sState);

		final Calendar c = Calendar.getInstance();
		year = c.get(Calendar.YEAR);
		month = c.get(Calendar.MONTH);
		day = c.get(Calendar.DAY_OF_MONTH);

		register.setOnClickListener(this);
		dateOfBirth.setOnClickListener(this);
	}

	@SuppressWarnings("deprecation")
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.etName:
			UIUtilities.showKeyboard(this, name);
			break;
		case R.id.bRegister:
			tName = name.getText().toString();
			tDob = dateOfBirth.getText().toString();
			tCity = city.toString();
			tState = state.toString();
			tZip = zipCode.getText().toString();
			tPhone = phoneNumber.getText().toString();
			tEmail = email.getText().toString();
			tPass = password.getText().toString();
			tConPass = confirmPassword.getText().toString();
			boolean emailCheck;
			emailCheck = UIUtilities.isEmailValid(tEmail);

			if (tName.matches("") || tDob.matches("") || tCity.matches("")
					|| tState.matches("") || tZip.matches("")
					|| tPhone.matches("") || tEmail.matches("")
					|| tPass.matches("") || tConPass.matches("")) {
				UIUtilities.showConfirmationAlert(this,
						R.string.dialog_title_information,
						R.string.fill_all_details, R.string.dialog_button_Ok,
						new DialogInterface.OnClickListener() {
							public void onClick(DialogInterface dialog,
									int which) {
							}
						});
			}

			else {
				if (!tPass.equals(tConPass)) {
					UIUtilities.showConfirmationAlert(this,
							R.string.dialog_title_information,
							R.string.password_cpassowrd_should_be_same,
							R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {
								}
							});
				}

				else if (!emailCheck) {
					UIUtilities.showConfirmationAlert(this,
							R.string.dialog_title_information,
							R.string.invalid_email, R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {
								}
							});
				}

				else if (tPhone.length() < 10) {
					UIUtilities.showConfirmationAlert(this,
							R.string.dialog_title_information,
							R.string.invalid_phone, R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {
								}
							});
				}
				
				else if (tPass.length() < 6) {
					UIUtilities.showConfirmationAlert(this,
							R.string.dialog_title_information,
							R.string.invalid_password, R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {
								}
							});
				}

				else {
					final UserRegistrationInfo user = new UserRegistrationInfo();
					user.setUsername(this.tName);
					user.setDob(this.tDob);
					user.setCity(this.tCity);
					user.setState(this.tState);
					user.setZipcode(this.tZip);
					user.setPhonenumber(this.tPhone);
					user.setEmail(this.tEmail);
					user.setPassword(this.tPass);
					user.setCpassword(this.tConPass);
					DbUtils.addNewUserAccountInfo(this, user);
					progress = ProgressDialog.show(this, "Loading",
							"Please wait...");
					Handler handler = new Handler();
					handler.postDelayed(new Runnable() {
						public void run() {
							progress.dismiss();
							HealthCareApp mAppInstance = (HealthCareApp)getApplication();
							mAppInstance.setPatientLoginInfo(user);
//							SharedPreferences shredPref = getSharedPreferences(
//									"loginInfo", MODE_PRIVATE);
//							SharedPreferences.Editor editor = shredPref.edit();
//
//							editor.putString("username", user.getUsername());
//							editor.putString("password", user.getPassword());
//							editor.commit();
							//HealthCareApp mAppInstance = (HealthCareApp)getApplication();
							//mAppInstance.setPatientLoginInfo(user);
							finish();
						}
					}, 3000); // 3000 milliseconds

				}

			}

			break;
		case R.id.etDOB:
			showDialog(DATE_DIALOG_ID);
			break;
		}
	}

	@Override
	protected Dialog onCreateDialog(int id) {
		switch (id) {
		case DATE_DIALOG_ID:
			// set date picker as current date
			return new DatePickerDialog(this, datePickerListener, year, month,
					day);
		}
		return null;
	}

	private DatePickerDialog.OnDateSetListener datePickerListener = new DatePickerDialog.OnDateSetListener() {

		// when dialog box is closed, below method will be called.
		public void onDateSet(DatePicker view, int selectedYear,
				int selectedMonth, int selectedDay) {
			year = selectedYear;
			month = selectedMonth;
			day = selectedDay;

			// set selected date into textview
			dateOfBirth.setText(new StringBuilder().append(month + 1)
					.append("/").append(day).append("/").append(year)
					.append(" "));

		}
	};

}
