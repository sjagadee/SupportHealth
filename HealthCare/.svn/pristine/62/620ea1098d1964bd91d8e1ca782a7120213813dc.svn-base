package app.nichepro.fragmenttabdoctor.home;

import java.util.ArrayList;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.fragmenttabpatient.ehr.PatientEHRFragment;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.ErrorResponseObject;
import app.nichepro.model.PatientAppointmentListResponseObject;
import app.nichepro.model.PatientAppointmentResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.EnumFactory.LoginType;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class DoctorHomeFragment extends BaseFragment implements
		ResponseParserListener {

	PatientAppointmentListResponseObject mDocAppointmentData = null;
	private WebRequestTask appointmentRequestTask;
	private ResponseMesssagType msgType;
	private ArrayAdapter<PatientAppointmentResponseObject> mListAdapter;
	private ListView mListView;
	private LayoutInflater mInflater;
	private TextView numberOfApptext;
	private TextView doctorName;
	HealthCareApp myApp;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		View view = inflater.inflate(R.layout.doctor_home_tab_first_screen,
				container, false);
		myApp =(HealthCareApp)getActivity().getApplication();
		numberOfApptext = (TextView)view.findViewById(R.id.numberOfAppTxt);
		doctorName = (TextView)view.findViewById(R.id.doctorTxt);
		doctorName.setText(myApp.getLoggedInUser().LOGIN_DETAILS.lastName + " " + myApp.getLoggedInUser().LOGIN_DETAILS.firstName);

		
		mInflater = inflater;

		mListView = (ListView) view.findViewById(R.id.appointmentlist);
		if (mDocAppointmentData == null) {
			requestForAppointments();
		} else {
			populateViewWithData();
		}

		return view;
	}

	void populateViewWithData() {
		// Creating the list adapter and populating the list
		mListAdapter = new DoctorAppointmentListAdapter(mInflater.getContext(),
				mInflater, R.layout.doctor_home_list_cell);

		int numberOfappointment = 0;

		for (PatientAppointmentResponseObject element : mDocAppointmentData.APPOINTMENT_LIST) {
			mListAdapter.add(element);
			++numberOfappointment;

		}

		if (numberOfappointment != 0 ) {
			numberOfApptext.setText("Upcoming No. of Appointments: " +numberOfappointment );
		}else
			numberOfApptext.setText("Upcoming No. of Appointments: 0");
		
		mListView.setAdapter(mListAdapter);
		mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, final View view,
					int position, long id) {
				PatientAppointmentResponseObject element = mDocAppointmentData.APPOINTMENT_LIST
						.get(position);

				PatientEHRFragment pef = new PatientEHRFragment(LoginType.Physician,Constants.TAB_HOME,element.patientId);
//				pef.isFromDoctor = true;
//				pef.mTabName = Constants.TAB_HOME;
//				pef.mPatientId = element.patientId;
				mDoctorActivity.pushFragments(Constants.TAB_HOME, pef, true,
						true);
			}
		});
	}

	public void requestForAppointments() {
		appointmentRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.APPOINTMENT_LIST), getActivity(),
				this);

		HealthCareApp myApp = (HealthCareApp) getActivity().getApplication();
		appointmentRequestTask.AddParam(Constants.PARAM_doctorId, myApp
				.getLoggedInUser().getPartyId());

		appointmentRequestTask.AddParam(Constants.PARAM_partyType,
				Constants.VALUE_DOCTOR);
		appointmentRequestTask.AddParam(Constants.PARAM_dateValue,
				Constants.VALUE_UPCOMING);
		appointmentRequestTask.execute();
	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.AppointmentDoctorListMessageType) {

			if (items != null && !items.isEmpty() && items.size() > 0) {
				PatientAppointmentListResponseObject palro = (PatientAppointmentListResponseObject) items
						.get(0);
				if (palro.APPOINTMENT_LIST.size() > 0) {
					this.mDocAppointmentData = palro;
					populateViewWithData();

				} else {
					UIUtilities.showConfirmationAlert(getActivity(),
							R.string.dialog_title_information,
							"No Appointments Found", R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {

								}
							});
				}
			}
		}else if (this.msgType == ResponseMesssagType.ErrorResponseMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {
				ErrorResponseObject ero = (ErrorResponseObject) items.get(0);
				UIUtilities.showErrorWithOkButton(getActivity(), ero.getErrorText());
			} else
				UIUtilities.showServerError(getActivity());

		} else if (this.msgType == ResponseMesssagType.UnknownResponseMessageType) {
			UIUtilities.showServerError(getActivity());
		}else{
			UIUtilities.showServerError(getActivity());
		}

	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		UIUtilities.showConfirmationAlert(getActivity(),
				R.string.dialog_title_information, ex.getMessage(),
				R.string.dialog_button_Ok,
				new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int which) {

					}
				});
	}

}
