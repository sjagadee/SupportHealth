package app.nichepro.fragmenttabpatient.ehr;

import java.util.ArrayList;

import android.content.DialogInterface;
import android.graphics.Color;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.ViewAnimator;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.animation.AnimationFactory;
import app.nichepro.animation.AnimationFactory.FlipDirection;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.ErrorResponseObject;
import app.nichepro.model.PartyListResponseObject;
import app.nichepro.model.PartyResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.UpdateUiFromAdapterListener;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class PatientEhrShareHealthRecordFragment extends BaseFragment implements
		OnClickListener, UpdateUiFromAdapterListener, ResponseParserListener {
	Boolean isToggle;
	Button btn_list_of_doctors, btn_add_doctors;

	Button doctorSendRequest;
	EditText doctorContent;
	EditText doctorEmail;
	EditText doctorCC;
	EditText doctorSubject;
	String dcontent, demail, dsubject, dcc;
	public boolean isFromDoctor;
	public String patientId;
	public String tabName;
	ViewAnimator viewAnimator;
	WebRequestTask shareEhrRequestTask;
	private ResponseMesssagType msgType;
	public PartyListResponseObject doctorListObject;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.patientshareehrfragment,
				container, false);

		ListView list = (ListView) view.findViewById(R.id.doctorlist);

		// Creating the list adapter and populating the list
		ArrayAdapter<PartyResponseObject> listAdapter = new DoctorListAdapter(
				inflater.getContext(), inflater, R.layout.doctor_list_view,
				this);

		for (PartyResponseObject party : doctorListObject.party) {
			listAdapter.add(party);

		}
		list.setAdapter(listAdapter);

		isToggle = true;

		viewAnimator = (ViewAnimator) view.findViewById(R.id.viewFlipper);

		btn_list_of_doctors = (Button) view.findViewById(R.id.bListOfDoctors);
		btn_add_doctors = (Button) view.findViewById(R.id.bAddDoctors);
		btn_list_of_doctors.setSelected(true);
		btn_list_of_doctors.setOnClickListener(this);
		btn_add_doctors.setOnClickListener(this);

		doctorSubject = (EditText) view.findViewById(R.id.doc_subject);
		doctorEmail = (EditText) view.findViewById(R.id.doc_email);
		doctorContent = (EditText) view.findViewById(R.id.doc_content);
		doctorCC = (EditText) view.findViewById(R.id.doc_cc);
		doctorSendRequest = (Button) view.findViewById(R.id.doc_send_request);

		doctorSendRequest.setOnClickListener(this);

		return view;
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.doc_send_request:
			addDoctorRequest();

			break;
		case R.id.bListOfDoctors:
			if (isToggle == false) {
				AnimationFactory.flipTransition(viewAnimator,
						FlipDirection.LEFT_RIGHT);
				btn_list_of_doctors.setTextColor(Color.BLACK);
				btn_add_doctors.setTextColor(Color.WHITE);
				btn_list_of_doctors.setSelected(true);
				btn_add_doctors.setSelected(false);
			}
			isToggle = true;
			break;

		case R.id.bAddDoctors:
			if (isToggle == true) {
				AnimationFactory.flipTransition(viewAnimator,
						FlipDirection.LEFT_RIGHT);
				btn_add_doctors.setTextColor(Color.BLACK);
				btn_list_of_doctors.setTextColor(Color.WHITE);
				btn_add_doctors.setSelected(true);
				btn_list_of_doctors.setSelected(false);
			}
			isToggle = false;
			break;

		}

	}
	
	public void refreshEditfields(){
		UIUtilities.hideKeyboard(getActivity(), doctorSubject);
		UIUtilities.hideKeyboard(getActivity(), doctorEmail);
		UIUtilities.hideKeyboard(getActivity(), doctorContent);
		UIUtilities.hideKeyboard(getActivity(), doctorCC);

		doctorSubject.setText("");
		doctorEmail.setText("");
		doctorContent.setText("");
		doctorCC.setText("");
	}

	@Override
	public void updateUI(String message) {
		// TODO Auto-generated method stub
		requestForShareEHR(message);
	}

	public void requestForShareEHR(String partyIdTo) {
		shareEhrRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.SHARE_EHR), getActivity(), this);

		HealthCareApp myApp = (HealthCareApp) getActivity().getApplication();
		if (isFromDoctor) {
			shareEhrRequestTask.AddParam(Constants.PARAM_partyId, patientId);

		} else
			shareEhrRequestTask.AddParam(Constants.PARAM_partyId, myApp
					.getLoggedInUser().getPartyId());

		shareEhrRequestTask.AddParam(Constants.PARAM_partyIdTo, partyIdTo);

		shareEhrRequestTask.execute();
	}

	public void addDoctorRequest() {

		dsubject = doctorSubject.getText().toString();
		demail = doctorEmail.getText().toString();
		dcontent = doctorContent.getText().toString();
		dcc = doctorCC.getText().toString();
		boolean emailCheck;
		emailCheck = UIUtilities.isEmailValid(demail);
		if (dcontent.matches("") || demail.matches("") || dsubject.matches("")) {
			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information,
					R.string.fill_all_details, R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {
						}
					});
		} else if (!emailCheck) {

			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information, R.string.invalid_email,
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {
						}
					});
		} else {
			shareEhrRequestTask = new WebRequestTask(
					WebLinks.getLink(WebLinks.SendJoinUsRequest),
					getActivity(), this);

			HealthCareApp myApp = (HealthCareApp) getActivity()
					.getApplication();
			shareEhrRequestTask.AddParam(Constants.PARAM_partyId, myApp
					.getLoggedInUser().getPartyId());

			shareEhrRequestTask.AddParam(Constants.PARAM_To, demail);
			shareEhrRequestTask.AddParam(Constants.PARAM_subject, dsubject);
			if (!dcc.matches("")) {
				shareEhrRequestTask.AddParam(Constants.PARAM_cc, dcc);
			}
			shareEhrRequestTask.AddParam(Constants.PARAM_message, dcontent);
			shareEhrRequestTask.execute();
		}
	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.PushCCREventListMessageType) {
			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information,
					"Your EHR has been shared successfully!!",
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		} else if (this.msgType == ResponseMesssagType.JoinUsRequestMessageType) {
			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information,
					"Your Invite Request has been sent successfully!!",
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {
							 refreshEditfields();
							 
						}
					});
		} else if (this.msgType == ResponseMesssagType.ErrorResponseMessageType) {
			if (items != null && !items.isEmpty() && items.size() > 0) {
				ErrorResponseObject ero = (ErrorResponseObject) items.get(0);
				UIUtilities.showErrorWithOkButton(getActivity(), ero.getErrorText());
			} else
				UIUtilities.showServerError(getActivity());

		} else if (this.msgType == ResponseMesssagType.UnknownResponseMessageType) {
			UIUtilities.showServerError(getActivity());
		}else{
			UIUtilities.showServerError(getActivity());
		}
	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub
		UIUtilities.showErrorWithOkButton(getActivity(), ex.getMessage());

	}

	@Override
	public void updateUI(int position) {
		// TODO Auto-generated method stub

	}

	@Override
	public void updateUI(String message, int position) {
		// TODO Auto-generated method stub
		
	}

}
