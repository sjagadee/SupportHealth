package app.nichepro.fragmenttabsponsor.home;

import java.util.ArrayList;

import android.content.DialogInterface;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import app.nichepro.HealthCareApp;
import app.nichepro.activities.healthcare.BaseFragment;
import app.nichepro.activities.healthcare.R;
import app.nichepro.model.BaseResponseObject;
import app.nichepro.model.SponsorShipListResponseObject;
import app.nichepro.model.SponsorShipResponseObject;
import app.nichepro.responsehandler.ResponseParserListener;
import app.nichepro.util.Constants;
import app.nichepro.util.EnumFactory.ResponseMesssagType;
import app.nichepro.util.UIUtilities;
import app.nichepro.util.WebLinks;
import app.nichepro.util.WebRequestTask;

public class SponsorHomeFragment extends BaseFragment implements
		ResponseParserListener {

	WebRequestTask sponsorRequestTask;
	ResponseMesssagType msgType;
	HealthCareApp myApp;
	SponsorShipListResponseObject mSponsorShipRequest;
	TextView newRequest;
	TextView approvedRequest;
	TextView name;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		View view = inflater.inflate(R.layout.sponsor_home_screen, container,
				false);
		myApp = (HealthCareApp) getActivity().getApplication();
		newRequest = (TextView) view.findViewById(R.id.newRequest);
		approvedRequest = (TextView) view.findViewById(R.id.sponsoredRequest);
		name = (TextView) view.findViewById(R.id.hello_sponsor);
		name.setText(myApp.getLoggedInUser().LOGIN_DETAILS.lastName + " " + myApp.getLoggedInUser().LOGIN_DETAILS.firstName);

		
		this.mSponsorShipRequest = null;
		requestForSponsorshipList();

		return view;
	}

	void requestForSponsorshipList() {
		sponsorRequestTask = new WebRequestTask(
				WebLinks.getLink(WebLinks.ListOfSponsership), getActivity(),
				this);

		HealthCareApp myApp = (HealthCareApp) getActivity().getApplication();
		sponsorRequestTask.AddParam(Constants.PARAM_partyId, myApp
				.getLoggedInUser().getPartyId());

		sponsorRequestTask.execute();
	}

	void populateViewWithData() {
		if (this.mSponsorShipRequest != null
				&& this.mSponsorShipRequest.RESPONSE.size() > 0) {
			int newRequestCount = 0;
			int approvedRequestCount = 0;
			for (SponsorShipResponseObject element : this.mSponsorShipRequest.RESPONSE) {

				if (element.status != null
						&& element.status.toString().compareTo("Created") == 0) {
					++newRequestCount;
				} else if (element.status != null
						&& element.status.toString().compareTo("approve") == 0) {
					++approvedRequestCount;
				}
			}
			if (newRequestCount != 0) {
				newRequest
						.setText("Pending Request For Sponsorship: "
								+ newRequestCount);
			} else {
				newRequest
						.setText("Pending Request For Sponsorship: 0");

			}

			if (approvedRequestCount != 0) {
				approvedRequest.setText("Number of Sponsored patient: "
						+ approvedRequestCount);

			} else {
				approvedRequest.setText("Number of Sponsored patient: 0");

			}

		} else {
			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information, "No Request Found",
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		}

	}

	@Override
	public void onEndParsingMsgType(ResponseMesssagType msgType) {
		// TODO Auto-generated method stub
		this.msgType = msgType;
	}

	@Override
	public void onEndParsingResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub
		if (this.msgType == ResponseMesssagType.SponsorshipListMessageType) {

			if (items != null && !items.isEmpty() && items.size() > 0) {
				SponsorShipListResponseObject palro = (SponsorShipListResponseObject) items
						.get(0);
				if (palro.RESPONSE.size() > 0) {
					this.mSponsorShipRequest = palro;
					populateViewWithData();

				} else {
					UIUtilities.showConfirmationAlert(getActivity(),
							R.string.dialog_title_information,
							"No Request Found", R.string.dialog_button_Ok,
							new DialogInterface.OnClickListener() {
								public void onClick(DialogInterface dialog,
										int which) {

								}
							});
				}
			}
		} else {
			UIUtilities.showConfirmationAlert(getActivity(),
					R.string.dialog_title_information, "No Request Found",
					R.string.dialog_button_Ok,
					new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {

						}
					});
		}
	}

	@Override
	public void onErrorResponse(ArrayList<BaseResponseObject> items) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onError(Exception ex) {
		// TODO Auto-generated method stub

	}

}
